#BlueJ class context
comment0.params=
comment0.target=Forca()
comment0.text=\r\n\ Construtor\ da\ classe\ Forca.\ Chama\ o\ construtor\ da\ classe\ m\u00E3e\ (World).\r\n
comment1.params=
comment1.target=void\ ReceberLetraPalpite()
comment1.text=\r\n\ M\u00E9todo\ que\ recebe\ uma\ letra\ como\ palpite.\r\n
comment10.params=jogadorpalavra
comment10.target=java.util.ArrayList\ AtualizarArrayPalavraAcertou(Jogador)
comment10.text=\r\n\ M\u00E9todo\ que\ atualiza\ o\ ArrayPalavra,\ caso\ o\ jogador\ acerte\ a\ palavra\ completa.\r\n\ @param\ jogadorpalavra\ Jogador\r\n\ @return\ ArrayPalavra\ ArrayList<Character>\ -\ ArrayList\ preenchido\ com\ todas\ as\ letras\ da\ palavra\ adivinhada.\ \r\n
comment11.params=
comment11.target=java.util.ArrayList\ AtualizarArrayLetrasPalpite()
comment11.text=\r\n\ M\u00E9todo\ que\ atualiza\ o\ ArrayLetrasPalpite\ com\ a\ letra\ que\ o\ jogador\ deu\ como\ palpite.\r\n\ @return\ ArrayLetrasPalpite\ -\ ArrayList\ contendo\ todas\ as\ letras\ que\ o\ jogador\ j\u00E1\ forneceu\ como\ palpite.\r\n
comment12.params=
comment12.target=boolean\ VerificarSeLetraInformada()
comment12.text=\r\n\ M\u00E9todo\ que\ verifica\ se\ a\ letra\ dada\ como\ palpite\ j\u00E1\ foi\ informada\ antes.\r\n\ @return\ boolean\ -\ valor\ booleano\ que\ informa\ se\ a\ letra\ j\u00E1\ foi\ informada\ previamente.\r\n
comment13.params=
comment13.target=void\ LetraInformada()
comment13.text=\r\n\ M\u00E9todo\ que\ informa\ ao\ usu\u00E1rio\ que\ a\ letra\ informada\ como\ palpite\ j\u00E1\ foi\ informada\ anteriormente.\r\n
comment14.params=jogadorpalavra
comment14.target=boolean\ CompararPalavras(Jogador)
comment14.text=\r\n\ M\u00E9todo\ que\ compara\ a\ palavra\ dada\ como\ palpite\ com\ a\ palavra\ a\ ser\ adivinhada,\ informando\ se\ estas\ s\u00E3o\ ou\ n\u00E3o\ iguais.\r\n\ @param\ jogadorpalavra\ Jogador\r\n\ @return\ todasletrasiguais\ boolean\ -\ valor\ booleano\ que\ informa\ se\ as\ palavras\ possuem\ todas\ as\ letras\ iguais.\r\n
comment15.params=palavracerta
comment15.target=void\ InformarIgualdadePalavra(boolean)
comment15.text=\r\n\ M\u00E9todo\ que\ retorna\ para\ o\ usu\u00E1rio\ se\ a\ palavra\ dada\ como\ palpite\ coincide\ com\ a\ palavra\ a\ ser\ adivinhada.\r\n\ @param\ palavracerta\ boolean\ \r\n
comment16.params=jogadorpalavra
comment16.target=void\ AtualizarArrayPalavra(Jogador)
comment16.text=\r\n\ M\u00E9todo\ que\ adiciona\ a\ letra\ dada\ como\ palpite\ (que\ est\u00E1\ presente\ na\ palavra)\ ao\ ArrayList\ ArrayPalavra.\r\n\ @param\ jogadorpalavra\ Jogador\r\n
comment17.params=
comment17.target=void\ VerificarPreenchimentoPalavra()
comment17.text=\r\n\ M\u00E9todo\ que\ verifica\ se\ o\ ArrayList\ que\ armazena\ a\ palavra\ a\ ser\ adivinhada\ est\u00E1\ todo\ preenchido\ por\ letras.\ \r\n\ Verifica\ se\ todas\ as\ letras\ da\ palavra\ j\u00E1\ foram\ acertadas.\r\n
comment18.params=jogadorpalpite\ jogadorpalavra
comment18.target=void\ CalcularPontuacaoRodada(JogadorHumano,\ Jogador)
comment18.text=M\u00E9todo\ que\ calcula\ a\ pontua\u00E7\u00E3o\ de\ cada\ jogador\ ao\ final\ da\ rodada.\r\nPara\ cada\ tentativa\ que\ o\ jogadorpalpite\ perde,\ este\ perde\ 5\ pontos\ e\ o\ jogadorpalavra\ ganha\ 5\ pontos.\ \r\nCaso\ o\ jogadorpalpite\ acerte\ a\ palavra\ (vitoria\ \=\=\ true),\ este\ ganha\ um\ b\u00F4nus\ de\ 30\ pontos\ al\u00E9m\ da\ pontua\u00E7\u00E3o\ relativa\ \u00E0\ quantidade\ de\ tentativas\ restantes.\r\nCaso\ o\ jogadorpalpite\ erre\ a\ palavra,\ o\ jogadorpalavra\ ganha\ 30\ pontos\ (6\ tentativas\ *\ 5\ pts\ \=\ 30\ pts).\r\n@param\ jogadorpalpite\ JogadorHumano,\ jogadorpalavra\ Jogador\r\n
comment19.params=jogadorpalpite\ jogadorpalavra
comment19.target=void\ AtualizarPontuacaoJogadores(Jogador,\ Jogador)
comment19.text=\r\n\ M\u00E9todo\ que\ atualiza\ a\ pontua\u00E7\u00E3o\ total\ dos\ jogadores\ ap\u00F3s\ o\ final\ da\ rodada.\r\n\ @param\ jogadorpalpite,\ jogadorpalavra\ Jogador\r\n
comment2.params=
comment2.target=void\ ReceberPalavraPalpite()
comment2.text=\r\n\ M\u00E9todo\ que\ recebe\ uma\ palavra\ como\ palpite.\r\n
comment20.params=jogadorpalpite\ jogadorpalavra
comment20.target=void\ CompararPontuacaoRodada(Jogador,\ Jogador)
comment20.text=\r\n\ M\u00E9todo\ que\ informa\ ao\ usu\u00E1rio\ o\ vencedor\ da\ rodada\ para\ partidas\ Jogador\ vs\ Jogador.\r\n\ @param\ jogadorpalpite,\ jogadorpalavra\ Jogador\r\n
comment21.params=jogadorpalpite\ jogadormaquina
comment21.target=void\ CompararPontuacaoRodada(Jogador,\ JogadorMaquina)
comment21.text=\r\n\ M\u00E9todo\ que\ informa\ ao\ usu\u00E1rio\ o\ vencedor\ da\ rodada\ para\ partidas\ Jogador\ vs\ M\u00E1quina.\r\n\ @param\ jogadorpalpite\ Jogador,\ jogadormaquina\ JogadorMaquina\r\n
comment22.params=jogador1\ jogador2
comment22.target=void\ FimJogo(JogadorHumano,\ JogadorHumano)
comment22.text=\r\n\ M\u00E9todo\ que\ informa\ ao\ usu\u00E1rio\ quem\ foi\ o\ vencedor\ da\ partida.\r\n\ @param\ jogador1,\ jogador2\ JogadorHumano\r\n
comment23.params=
comment23.target=void\ AtualizarVitoria()
comment23.text=\r\n\ M\u00E9todo\ que\ atualiza\ ao\ final\ de\ cada\ rodada\ o\ boolean\ vitoria,\ respons\u00E1vel\ por\ informar\ se\ a\ palavra\ foi\ acertada.\ \ \ \ \ \ \r\n
comment24.params=
comment24.target=void\ LimparArrayLetrasPalpite()
comment24.text=\r\n\ M\u00E9todo\ que,\ a\ cada\ rodada,\ limpa\ o\ ArrayList\ que\ armazena\ as\ letras\ que\ foram\ dadas\ como\ palpite.\r\n
comment25.params=
comment25.target=void\ ZerarIndiceArrayLetras()
comment25.text=\r\n\ M\u00E9todo\ que,\ a\ cada\ rodada,\ zera\ o\ \u00EDndice\ do\ ArrayList\ ArrayLetrasPalpite.\r\n
comment3.params=
comment3.target=char\ PadronizarLetra()
comment3.text=\r\n\ M\u00E9todo\ que\ padroniza\ a\ letra\ informada\ como\ palpite\ para\ letra\ mai\u00FAscula.\r\n\ @return\ letra_c\ char\ -\ letra\ informada\ em\ letra\ mai\u00FAscula.\r\n
comment4.params=
comment4.target=java.lang.String\ PadronizarPalavraPalpite()
comment4.text=\r\n\ M\u00E9todo\ que\ padroniza\ a\ palavra\ informada\ como\ palpite\ para\ letras\ mai\u00FAsculas.\r\n\ @return\ palavra_palpite\ String\ -\ palavra\ informada\ em\ letras\ mai\u00FAsculas.\r\n
comment5.params=jogadorpalavra
comment5.target=java.util.ArrayList\ InicializarArrayPalavra(Jogador)
comment5.text=\r\n\ M\u00E9todo\ que,\ a\ cada\ rodada,\ inicializa\ um\ ArrayList\ que\ armazena\ a\ quantidade\ de\ espa\u00E7os\ da\ uma\ palavra\ a\ ser\ adivinhada.\ Estilo\ do\ ArrayList\:\ [_\ _\ _\ _\ _\ _]\r\n\ @param\ jogadorpalavra\ Jogador\r\n\ @return\ ArrayPalavra\ ArrayList<Character>\ -\ ArrayList\ que\ armazena\ a\ quantidade\ de\ letras\ da\ palavra\ a\ ser\ adivinhada.\r\n
comment6.params=jogadorpalavra
comment6.target=void\ InformarDicaPalavra(Jogador)
comment6.text=\r\n\ M\u00E9todo\ que\ exibe\ a\ dica\ da\ palavra\ a\ ser\ adivinhada.\r\n\ @param\ jogadorpalavra\ Jogador\ \r\n
comment7.params=jogadorpalavra
comment7.target=boolean\ VerificarOcorrenciaLetra(Jogador)
comment7.text=\r\n\ M\u00E9todo\ que\ verifica\ se\ a\ letra\ informada\ como\ palpite\ est\u00E1\ presente\ na\ palavra.\r\n\ @param\ jogadorpalavra\ Jogador\r\n\ @return\ boolean\ -\ valor\ booleano\ que\ informa\ se\ a\ letra\ dada\ como\ palpite\ est\u00E1\ presente\ na\ palavra\ a\ ser\ adivinhada.\r\n
comment8.params=letracerta
comment8.target=void\ InformarOcorrencia(boolean)
comment8.text=\r\n\ M\u00E9todo\ que\ informa\ ao\ usu\u00E1rio\ se\ a\ letra\ informada\ est\u00E1\ presente\ na\ palavra.\r\n\ @param\ letracerta\ boolean\ \r\n
comment9.params=jogadorpalpite
comment9.target=void\ AtualizarTentativasJogador(JogadorHumano)
comment9.text=\r\n\ M\u00E9todo\ que\ diminui\ a\ quantidade\ de\ tentativas\ do\ jogador,\ caso\ este\ erre\ um\ palpite.\r\n\ @param\ jogadorpalpite\ JogadorHumano\r\n
numComments=26
